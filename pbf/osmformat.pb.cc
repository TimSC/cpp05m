// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osmformat.proto

#include "osmformat.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_osmformat_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmformat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ChangeSet;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmformat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DenseInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmformat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HeaderBBox;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmformat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Info;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmformat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringTable;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmformat_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DenseNodes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmformat_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Node;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmformat_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Relation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmformat_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Way;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmformat_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_PrimitiveGroup;
}  // namespace protobuf_osmformat_2eproto
namespace OSMPBF {
class HeaderBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeaderBlock>
      _instance;
} _HeaderBlock_default_instance_;
class HeaderBBoxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeaderBBox>
      _instance;
} _HeaderBBox_default_instance_;
class PrimitiveBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrimitiveBlock>
      _instance;
} _PrimitiveBlock_default_instance_;
class PrimitiveGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrimitiveGroup>
      _instance;
} _PrimitiveGroup_default_instance_;
class StringTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringTable>
      _instance;
} _StringTable_default_instance_;
class InfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Info>
      _instance;
} _Info_default_instance_;
class DenseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DenseInfo>
      _instance;
} _DenseInfo_default_instance_;
class ChangeSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeSet>
      _instance;
} _ChangeSet_default_instance_;
class NodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Node>
      _instance;
} _Node_default_instance_;
class DenseNodesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DenseNodes>
      _instance;
} _DenseNodes_default_instance_;
class WayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Way>
      _instance;
} _Way_default_instance_;
class RelationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Relation>
      _instance;
} _Relation_default_instance_;
}  // namespace OSMPBF
namespace protobuf_osmformat_2eproto {
static void InitDefaultsHeaderBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OSMPBF::_HeaderBlock_default_instance_;
    new (ptr) ::OSMPBF::HeaderBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OSMPBF::HeaderBlock::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HeaderBlock =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHeaderBlock}, {
      &protobuf_osmformat_2eproto::scc_info_HeaderBBox.base,}};

static void InitDefaultsHeaderBBox() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OSMPBF::_HeaderBBox_default_instance_;
    new (ptr) ::OSMPBF::HeaderBBox();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OSMPBF::HeaderBBox::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HeaderBBox =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeaderBBox}, {}};

static void InitDefaultsPrimitiveBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OSMPBF::_PrimitiveBlock_default_instance_;
    new (ptr) ::OSMPBF::PrimitiveBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OSMPBF::PrimitiveBlock::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PrimitiveBlock =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPrimitiveBlock}, {
      &protobuf_osmformat_2eproto::scc_info_StringTable.base,
      &protobuf_osmformat_2eproto::scc_info_PrimitiveGroup.base,}};

static void InitDefaultsPrimitiveGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OSMPBF::_PrimitiveGroup_default_instance_;
    new (ptr) ::OSMPBF::PrimitiveGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OSMPBF::PrimitiveGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_PrimitiveGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsPrimitiveGroup}, {
      &protobuf_osmformat_2eproto::scc_info_Node.base,
      &protobuf_osmformat_2eproto::scc_info_DenseNodes.base,
      &protobuf_osmformat_2eproto::scc_info_Way.base,
      &protobuf_osmformat_2eproto::scc_info_Relation.base,
      &protobuf_osmformat_2eproto::scc_info_ChangeSet.base,}};

static void InitDefaultsStringTable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OSMPBF::_StringTable_default_instance_;
    new (ptr) ::OSMPBF::StringTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OSMPBF::StringTable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StringTable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStringTable}, {}};

static void InitDefaultsInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OSMPBF::_Info_default_instance_;
    new (ptr) ::OSMPBF::Info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OSMPBF::Info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInfo}, {}};

static void InitDefaultsDenseInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OSMPBF::_DenseInfo_default_instance_;
    new (ptr) ::OSMPBF::DenseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OSMPBF::DenseInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DenseInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDenseInfo}, {}};

static void InitDefaultsChangeSet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OSMPBF::_ChangeSet_default_instance_;
    new (ptr) ::OSMPBF::ChangeSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OSMPBF::ChangeSet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChangeSet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChangeSet}, {}};

static void InitDefaultsNode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OSMPBF::_Node_default_instance_;
    new (ptr) ::OSMPBF::Node();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OSMPBF::Node::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Node =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNode}, {
      &protobuf_osmformat_2eproto::scc_info_Info.base,}};

static void InitDefaultsDenseNodes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OSMPBF::_DenseNodes_default_instance_;
    new (ptr) ::OSMPBF::DenseNodes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OSMPBF::DenseNodes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DenseNodes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDenseNodes}, {
      &protobuf_osmformat_2eproto::scc_info_DenseInfo.base,}};

static void InitDefaultsWay() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OSMPBF::_Way_default_instance_;
    new (ptr) ::OSMPBF::Way();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OSMPBF::Way::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Way =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWay}, {
      &protobuf_osmformat_2eproto::scc_info_Info.base,}};

static void InitDefaultsRelation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OSMPBF::_Relation_default_instance_;
    new (ptr) ::OSMPBF::Relation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OSMPBF::Relation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Relation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRelation}, {
      &protobuf_osmformat_2eproto::scc_info_Info.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_HeaderBlock.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HeaderBBox.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrimitiveBlock.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrimitiveGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StringTable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Info.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DenseInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChangeSet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Node.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DenseNodes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Way.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Relation.base);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::HeaderBlock, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::HeaderBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::HeaderBlock, bbox_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::HeaderBlock, required_features_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::HeaderBlock, optional_features_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::HeaderBlock, writingprogram_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::HeaderBlock, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::HeaderBlock, osmosis_replication_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::HeaderBlock, osmosis_replication_sequence_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::HeaderBlock, osmosis_replication_base_url_),
  3,
  ~0u,
  ~0u,
  0,
  1,
  4,
  5,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::HeaderBBox, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::HeaderBBox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::HeaderBBox, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::HeaderBBox, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::HeaderBBox, top_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::HeaderBBox, bottom_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::PrimitiveBlock, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::PrimitiveBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::PrimitiveBlock, stringtable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::PrimitiveBlock, primitivegroup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::PrimitiveBlock, granularity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::PrimitiveBlock, lat_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::PrimitiveBlock, lon_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::PrimitiveBlock, date_granularity_),
  0,
  ~0u,
  3,
  1,
  2,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::PrimitiveGroup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::PrimitiveGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::PrimitiveGroup, nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::PrimitiveGroup, dense_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::PrimitiveGroup, ways_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::PrimitiveGroup, relations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::PrimitiveGroup, changesets_),
  ~0u,
  0,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::StringTable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::StringTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::StringTable, s_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Info, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Info, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Info, changeset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Info, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Info, user_sid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Info, visible_),
  5,
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::DenseInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::DenseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::DenseInfo, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::DenseInfo, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::DenseInfo, changeset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::DenseInfo, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::DenseInfo, user_sid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::DenseInfo, visible_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::ChangeSet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::ChangeSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::ChangeSet, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Node, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Node, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Node, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Node, vals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Node, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Node, lat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Node, lon_),
  1,
  ~0u,
  ~0u,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::DenseNodes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::DenseNodes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::DenseNodes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::DenseNodes, denseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::DenseNodes, lat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::DenseNodes, lon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::DenseNodes, keys_vals_),
  ~0u,
  0,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Way, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Way, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Way, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Way, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Way, vals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Way, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Way, refs_),
  1,
  ~0u,
  ~0u,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Relation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Relation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Relation, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Relation, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Relation, vals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Relation, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Relation, roles_sid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Relation, memids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OSMPBF::Relation, types_),
  1,
  ~0u,
  ~0u,
  0,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::OSMPBF::HeaderBlock)},
  { 21, 30, sizeof(::OSMPBF::HeaderBBox)},
  { 34, 45, sizeof(::OSMPBF::PrimitiveBlock)},
  { 51, 61, sizeof(::OSMPBF::PrimitiveGroup)},
  { 66, 72, sizeof(::OSMPBF::StringTable)},
  { 73, 84, sizeof(::OSMPBF::Info)},
  { 90, 101, sizeof(::OSMPBF::DenseInfo)},
  { 107, 113, sizeof(::OSMPBF::ChangeSet)},
  { 114, 125, sizeof(::OSMPBF::Node)},
  { 131, 141, sizeof(::OSMPBF::DenseNodes)},
  { 146, 156, sizeof(::OSMPBF::Way)},
  { 161, 173, sizeof(::OSMPBF::Relation)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::OSMPBF::_HeaderBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OSMPBF::_HeaderBBox_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OSMPBF::_PrimitiveBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OSMPBF::_PrimitiveGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OSMPBF::_StringTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OSMPBF::_Info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OSMPBF::_DenseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OSMPBF::_ChangeSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OSMPBF::_Node_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OSMPBF::_DenseNodes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OSMPBF::_Way_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OSMPBF::_Relation_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "osmformat.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017osmformat.proto\022\006OSMPBF\"\207\002\n\013HeaderBloc"
      "k\022 \n\004bbox\030\001 \001(\0132\022.OSMPBF.HeaderBBox\022\031\n\021r"
      "equired_features\030\004 \003(\t\022\031\n\021optional_featu"
      "res\030\005 \003(\t\022\026\n\016writingprogram\030\020 \001(\t\022\016\n\006sou"
      "rce\030\021 \001(\t\022%\n\035osmosis_replication_timesta"
      "mp\030  \001(\003\022+\n#osmosis_replication_sequence"
      "_number\030! \001(\003\022$\n\034osmosis_replication_bas"
      "e_url\030\" \001(\t\"F\n\nHeaderBBox\022\014\n\004left\030\001 \002(\022\022"
      "\r\n\005right\030\002 \002(\022\022\013\n\003top\030\003 \002(\022\022\016\n\006bottom\030\004 "
      "\002(\022\"\322\001\n\016PrimitiveBlock\022(\n\013stringtable\030\001 "
      "\002(\0132\023.OSMPBF.StringTable\022.\n\016primitivegro"
      "up\030\002 \003(\0132\026.OSMPBF.PrimitiveGroup\022\030\n\013gran"
      "ularity\030\021 \001(\005:\003100\022\025\n\nlat_offset\030\023 \001(\003:\001"
      "0\022\025\n\nlon_offset\030\024 \001(\003:\0010\022\036\n\020date_granula"
      "rity\030\022 \001(\005:\0041000\"\267\001\n\016PrimitiveGroup\022\033\n\005n"
      "odes\030\001 \003(\0132\014.OSMPBF.Node\022!\n\005dense\030\002 \001(\0132"
      "\022.OSMPBF.DenseNodes\022\031\n\004ways\030\003 \003(\0132\013.OSMP"
      "BF.Way\022#\n\trelations\030\004 \003(\0132\020.OSMPBF.Relat"
      "ion\022%\n\nchangesets\030\005 \003(\0132\021.OSMPBF.ChangeS"
      "et\"\030\n\013StringTable\022\t\n\001s\030\001 \003(\014\"q\n\004Info\022\023\n\007"
      "version\030\001 \001(\005:\002-1\022\021\n\ttimestamp\030\002 \001(\003\022\021\n\t"
      "changeset\030\003 \001(\003\022\013\n\003uid\030\004 \001(\005\022\020\n\010user_sid"
      "\030\005 \001(\r\022\017\n\007visible\030\006 \001(\010\"\212\001\n\tDenseInfo\022\023\n"
      "\007version\030\001 \003(\005B\002\020\001\022\025\n\ttimestamp\030\002 \003(\022B\002\020"
      "\001\022\025\n\tchangeset\030\003 \003(\022B\002\020\001\022\017\n\003uid\030\004 \003(\021B\002\020"
      "\001\022\024\n\010user_sid\030\005 \003(\021B\002\020\001\022\023\n\007visible\030\006 \003(\010"
      "B\002\020\001\"\027\n\tChangeSet\022\n\n\002id\030\001 \002(\003\"l\n\004Node\022\n\n"
      "\002id\030\001 \002(\022\022\020\n\004keys\030\002 \003(\rB\002\020\001\022\020\n\004vals\030\003 \003("
      "\rB\002\020\001\022\032\n\004info\030\004 \001(\0132\014.OSMPBF.Info\022\013\n\003lat"
      "\030\010 \002(\022\022\013\n\003lon\030\t \002(\022\"{\n\nDenseNodes\022\016\n\002id\030"
      "\001 \003(\022B\002\020\001\022$\n\tdenseinfo\030\005 \001(\0132\021.OSMPBF.De"
      "nseInfo\022\017\n\003lat\030\010 \003(\022B\002\020\001\022\017\n\003lon\030\t \003(\022B\002\020"
      "\001\022\025\n\tkeys_vals\030\n \003(\005B\002\020\001\"c\n\003Way\022\n\n\002id\030\001 "
      "\002(\003\022\020\n\004keys\030\002 \003(\rB\002\020\001\022\020\n\004vals\030\003 \003(\rB\002\020\001\022"
      "\032\n\004info\030\004 \001(\0132\014.OSMPBF.Info\022\020\n\004refs\030\010 \003("
      "\022B\002\020\001\"\340\001\n\010Relation\022\n\n\002id\030\001 \002(\003\022\020\n\004keys\030\002"
      " \003(\rB\002\020\001\022\020\n\004vals\030\003 \003(\rB\002\020\001\022\032\n\004info\030\004 \001(\013"
      "2\014.OSMPBF.Info\022\025\n\troles_sid\030\010 \003(\005B\002\020\001\022\022\n"
      "\006memids\030\t \003(\022B\002\020\001\022.\n\005types\030\n \003(\0162\033.OSMPB"
      "F.Relation.MemberTypeB\002\020\001\"-\n\nMemberType\022"
      "\010\n\004NODE\020\000\022\007\n\003WAY\020\001\022\014\n\010RELATION\020\002B\017\n\rcros"
      "by.binary"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1649);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "osmformat.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_osmformat_2eproto
namespace OSMPBF {
const ::google::protobuf::EnumDescriptor* Relation_MemberType_descriptor() {
  protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_osmformat_2eproto::file_level_enum_descriptors[0];
}
bool Relation_MemberType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Relation_MemberType Relation::NODE;
const Relation_MemberType Relation::WAY;
const Relation_MemberType Relation::RELATION;
const Relation_MemberType Relation::MemberType_MIN;
const Relation_MemberType Relation::MemberType_MAX;
const int Relation::MemberType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void HeaderBlock::InitAsDefaultInstance() {
  ::OSMPBF::_HeaderBlock_default_instance_._instance.get_mutable()->bbox_ = const_cast< ::OSMPBF::HeaderBBox*>(
      ::OSMPBF::HeaderBBox::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeaderBlock::kBboxFieldNumber;
const int HeaderBlock::kRequiredFeaturesFieldNumber;
const int HeaderBlock::kOptionalFeaturesFieldNumber;
const int HeaderBlock::kWritingprogramFieldNumber;
const int HeaderBlock::kSourceFieldNumber;
const int HeaderBlock::kOsmosisReplicationTimestampFieldNumber;
const int HeaderBlock::kOsmosisReplicationSequenceNumberFieldNumber;
const int HeaderBlock::kOsmosisReplicationBaseUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeaderBlock::HeaderBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmformat_2eproto::scc_info_HeaderBlock.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:OSMPBF.HeaderBlock)
}
HeaderBlock::HeaderBlock(const HeaderBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      required_features_(from.required_features_),
      optional_features_(from.optional_features_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  writingprogram_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_writingprogram()) {
    writingprogram_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.writingprogram_);
  }
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source()) {
    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  osmosis_replication_base_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_osmosis_replication_base_url()) {
    osmosis_replication_base_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.osmosis_replication_base_url_);
  }
  if (from.has_bbox()) {
    bbox_ = new ::OSMPBF::HeaderBBox(*from.bbox_);
  } else {
    bbox_ = NULL;
  }
  ::memcpy(&osmosis_replication_timestamp_, &from.osmosis_replication_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&osmosis_replication_sequence_number_) -
    reinterpret_cast<char*>(&osmosis_replication_timestamp_)) + sizeof(osmosis_replication_sequence_number_));
  // @@protoc_insertion_point(copy_constructor:OSMPBF.HeaderBlock)
}

void HeaderBlock::SharedCtor() {
  writingprogram_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osmosis_replication_base_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bbox_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&osmosis_replication_sequence_number_) -
      reinterpret_cast<char*>(&bbox_)) + sizeof(osmosis_replication_sequence_number_));
}

HeaderBlock::~HeaderBlock() {
  // @@protoc_insertion_point(destructor:OSMPBF.HeaderBlock)
  SharedDtor();
}

void HeaderBlock::SharedDtor() {
  writingprogram_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osmosis_replication_base_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bbox_;
}

void HeaderBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HeaderBlock::descriptor() {
  ::protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeaderBlock& HeaderBlock::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmformat_2eproto::scc_info_HeaderBlock.base);
  return *internal_default_instance();
}


void HeaderBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:OSMPBF.HeaderBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  required_features_.Clear();
  optional_features_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      writingprogram_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      source_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      osmosis_replication_base_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(bbox_ != NULL);
      bbox_->Clear();
    }
  }
  if (cached_has_bits & 48u) {
    ::memset(&osmosis_replication_timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&osmosis_replication_sequence_number_) -
        reinterpret_cast<char*>(&osmosis_replication_timestamp_)) + sizeof(osmosis_replication_sequence_number_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HeaderBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OSMPBF.HeaderBlock)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .OSMPBF.HeaderBBox bbox = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bbox()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string required_features = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_required_features()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->required_features(this->required_features_size() - 1).data(),
            static_cast<int>(this->required_features(this->required_features_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OSMPBF.HeaderBlock.required_features");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string optional_features = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_optional_features()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->optional_features(this->optional_features_size() - 1).data(),
            static_cast<int>(this->optional_features(this->optional_features_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OSMPBF.HeaderBlock.optional_features");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string writingprogram = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_writingprogram()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->writingprogram().data(), static_cast<int>(this->writingprogram().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OSMPBF.HeaderBlock.writingprogram");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string source = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source().data(), static_cast<int>(this->source().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OSMPBF.HeaderBlock.source");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 osmosis_replication_timestamp = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {
          set_has_osmosis_replication_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &osmosis_replication_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 osmosis_replication_sequence_number = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {
          set_has_osmosis_replication_sequence_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &osmosis_replication_sequence_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string osmosis_replication_base_url = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_osmosis_replication_base_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->osmosis_replication_base_url().data(), static_cast<int>(this->osmosis_replication_base_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OSMPBF.HeaderBlock.osmosis_replication_base_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OSMPBF.HeaderBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OSMPBF.HeaderBlock)
  return false;
#undef DO_
}

void HeaderBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OSMPBF.HeaderBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .OSMPBF.HeaderBBox bbox = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_bbox(), output);
  }

  // repeated string required_features = 4;
  for (int i = 0, n = this->required_features_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_features(i).data(), static_cast<int>(this->required_features(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OSMPBF.HeaderBlock.required_features");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->required_features(i), output);
  }

  // repeated string optional_features = 5;
  for (int i = 0, n = this->optional_features_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_features(i).data(), static_cast<int>(this->optional_features(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OSMPBF.HeaderBlock.optional_features");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->optional_features(i), output);
  }

  // optional string writingprogram = 16;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->writingprogram().data(), static_cast<int>(this->writingprogram().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OSMPBF.HeaderBlock.writingprogram");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->writingprogram(), output);
  }

  // optional string source = 17;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OSMPBF.HeaderBlock.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->source(), output);
  }

  // optional int64 osmosis_replication_timestamp = 32;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(32, this->osmosis_replication_timestamp(), output);
  }

  // optional int64 osmosis_replication_sequence_number = 33;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(33, this->osmosis_replication_sequence_number(), output);
  }

  // optional string osmosis_replication_base_url = 34;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->osmosis_replication_base_url().data(), static_cast<int>(this->osmosis_replication_base_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OSMPBF.HeaderBlock.osmosis_replication_base_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      34, this->osmosis_replication_base_url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OSMPBF.HeaderBlock)
}

::google::protobuf::uint8* HeaderBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OSMPBF.HeaderBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .OSMPBF.HeaderBBox bbox = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_bbox(), deterministic, target);
  }

  // repeated string required_features = 4;
  for (int i = 0, n = this->required_features_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_features(i).data(), static_cast<int>(this->required_features(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OSMPBF.HeaderBlock.required_features");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->required_features(i), target);
  }

  // repeated string optional_features = 5;
  for (int i = 0, n = this->optional_features_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_features(i).data(), static_cast<int>(this->optional_features(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OSMPBF.HeaderBlock.optional_features");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->optional_features(i), target);
  }

  // optional string writingprogram = 16;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->writingprogram().data(), static_cast<int>(this->writingprogram().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OSMPBF.HeaderBlock.writingprogram");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->writingprogram(), target);
  }

  // optional string source = 17;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OSMPBF.HeaderBlock.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->source(), target);
  }

  // optional int64 osmosis_replication_timestamp = 32;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(32, this->osmosis_replication_timestamp(), target);
  }

  // optional int64 osmosis_replication_sequence_number = 33;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(33, this->osmosis_replication_sequence_number(), target);
  }

  // optional string osmosis_replication_base_url = 34;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->osmosis_replication_base_url().data(), static_cast<int>(this->osmosis_replication_base_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OSMPBF.HeaderBlock.osmosis_replication_base_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        34, this->osmosis_replication_base_url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OSMPBF.HeaderBlock)
  return target;
}

size_t HeaderBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OSMPBF.HeaderBlock)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string required_features = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->required_features_size());
  for (int i = 0, n = this->required_features_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->required_features(i));
  }

  // repeated string optional_features = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->optional_features_size());
  for (int i = 0, n = this->optional_features_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->optional_features(i));
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string writingprogram = 16;
    if (has_writingprogram()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->writingprogram());
    }

    // optional string source = 17;
    if (has_source()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source());
    }

    // optional string osmosis_replication_base_url = 34;
    if (has_osmosis_replication_base_url()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->osmosis_replication_base_url());
    }

    // optional .OSMPBF.HeaderBBox bbox = 1;
    if (has_bbox()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *bbox_);
    }

    // optional int64 osmosis_replication_timestamp = 32;
    if (has_osmosis_replication_timestamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->osmosis_replication_timestamp());
    }

    // optional int64 osmosis_replication_sequence_number = 33;
    if (has_osmosis_replication_sequence_number()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->osmosis_replication_sequence_number());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeaderBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OSMPBF.HeaderBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const HeaderBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeaderBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OSMPBF.HeaderBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OSMPBF.HeaderBlock)
    MergeFrom(*source);
  }
}

void HeaderBlock::MergeFrom(const HeaderBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OSMPBF.HeaderBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  required_features_.MergeFrom(from.required_features_);
  optional_features_.MergeFrom(from.optional_features_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_writingprogram();
      writingprogram_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.writingprogram_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_source();
      source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_osmosis_replication_base_url();
      osmosis_replication_base_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.osmosis_replication_base_url_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_bbox()->::OSMPBF::HeaderBBox::MergeFrom(from.bbox());
    }
    if (cached_has_bits & 0x00000010u) {
      osmosis_replication_timestamp_ = from.osmosis_replication_timestamp_;
    }
    if (cached_has_bits & 0x00000020u) {
      osmosis_replication_sequence_number_ = from.osmosis_replication_sequence_number_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HeaderBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OSMPBF.HeaderBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeaderBlock::CopyFrom(const HeaderBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OSMPBF.HeaderBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeaderBlock::IsInitialized() const {
  if (has_bbox()) {
    if (!this->bbox_->IsInitialized()) return false;
  }
  return true;
}

void HeaderBlock::Swap(HeaderBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeaderBlock::InternalSwap(HeaderBlock* other) {
  using std::swap;
  required_features_.InternalSwap(CastToBase(&other->required_features_));
  optional_features_.InternalSwap(CastToBase(&other->optional_features_));
  writingprogram_.Swap(&other->writingprogram_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_.Swap(&other->source_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  osmosis_replication_base_url_.Swap(&other->osmosis_replication_base_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bbox_, other->bbox_);
  swap(osmosis_replication_timestamp_, other->osmosis_replication_timestamp_);
  swap(osmosis_replication_sequence_number_, other->osmosis_replication_sequence_number_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HeaderBlock::GetMetadata() const {
  protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeaderBBox::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeaderBBox::kLeftFieldNumber;
const int HeaderBBox::kRightFieldNumber;
const int HeaderBBox::kTopFieldNumber;
const int HeaderBBox::kBottomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeaderBBox::HeaderBBox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmformat_2eproto::scc_info_HeaderBBox.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:OSMPBF.HeaderBBox)
}
HeaderBBox::HeaderBBox(const HeaderBBox& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&left_, &from.left_,
    static_cast<size_t>(reinterpret_cast<char*>(&bottom_) -
    reinterpret_cast<char*>(&left_)) + sizeof(bottom_));
  // @@protoc_insertion_point(copy_constructor:OSMPBF.HeaderBBox)
}

void HeaderBBox::SharedCtor() {
  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bottom_) -
      reinterpret_cast<char*>(&left_)) + sizeof(bottom_));
}

HeaderBBox::~HeaderBBox() {
  // @@protoc_insertion_point(destructor:OSMPBF.HeaderBBox)
  SharedDtor();
}

void HeaderBBox::SharedDtor() {
}

void HeaderBBox::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HeaderBBox::descriptor() {
  ::protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeaderBBox& HeaderBBox::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmformat_2eproto::scc_info_HeaderBBox.base);
  return *internal_default_instance();
}


void HeaderBBox::Clear() {
// @@protoc_insertion_point(message_clear_start:OSMPBF.HeaderBBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&left_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bottom_) -
        reinterpret_cast<char*>(&left_)) + sizeof(bottom_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HeaderBBox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OSMPBF.HeaderBBox)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint64 left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_left();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint64 right = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_right();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint64 top = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_top();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &top_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint64 bottom = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bottom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &bottom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OSMPBF.HeaderBBox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OSMPBF.HeaderBBox)
  return false;
#undef DO_
}

void HeaderBBox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OSMPBF.HeaderBBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint64 left = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->left(), output);
  }

  // required sint64 right = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->right(), output);
  }

  // required sint64 top = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(3, this->top(), output);
  }

  // required sint64 bottom = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(4, this->bottom(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OSMPBF.HeaderBBox)
}

::google::protobuf::uint8* HeaderBBox::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OSMPBF.HeaderBBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint64 left = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->left(), target);
  }

  // required sint64 right = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->right(), target);
  }

  // required sint64 top = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(3, this->top(), target);
  }

  // required sint64 bottom = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(4, this->bottom(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OSMPBF.HeaderBBox)
  return target;
}

size_t HeaderBBox::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:OSMPBF.HeaderBBox)
  size_t total_size = 0;

  if (has_left()) {
    // required sint64 left = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->left());
  }

  if (has_right()) {
    // required sint64 right = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->right());
  }

  if (has_top()) {
    // required sint64 top = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->top());
  }

  if (has_bottom()) {
    // required sint64 bottom = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->bottom());
  }

  return total_size;
}
size_t HeaderBBox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OSMPBF.HeaderBBox)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required sint64 left = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->left());

    // required sint64 right = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->right());

    // required sint64 top = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->top());

    // required sint64 bottom = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->bottom());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeaderBBox::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OSMPBF.HeaderBBox)
  GOOGLE_DCHECK_NE(&from, this);
  const HeaderBBox* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeaderBBox>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OSMPBF.HeaderBBox)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OSMPBF.HeaderBBox)
    MergeFrom(*source);
  }
}

void HeaderBBox::MergeFrom(const HeaderBBox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OSMPBF.HeaderBBox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      left_ = from.left_;
    }
    if (cached_has_bits & 0x00000002u) {
      right_ = from.right_;
    }
    if (cached_has_bits & 0x00000004u) {
      top_ = from.top_;
    }
    if (cached_has_bits & 0x00000008u) {
      bottom_ = from.bottom_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HeaderBBox::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OSMPBF.HeaderBBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeaderBBox::CopyFrom(const HeaderBBox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OSMPBF.HeaderBBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeaderBBox::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void HeaderBBox::Swap(HeaderBBox* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeaderBBox::InternalSwap(HeaderBBox* other) {
  using std::swap;
  swap(left_, other->left_);
  swap(right_, other->right_);
  swap(top_, other->top_);
  swap(bottom_, other->bottom_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HeaderBBox::GetMetadata() const {
  protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PrimitiveBlock::InitAsDefaultInstance() {
  ::OSMPBF::_PrimitiveBlock_default_instance_._instance.get_mutable()->stringtable_ = const_cast< ::OSMPBF::StringTable*>(
      ::OSMPBF::StringTable::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrimitiveBlock::kStringtableFieldNumber;
const int PrimitiveBlock::kPrimitivegroupFieldNumber;
const int PrimitiveBlock::kGranularityFieldNumber;
const int PrimitiveBlock::kLatOffsetFieldNumber;
const int PrimitiveBlock::kLonOffsetFieldNumber;
const int PrimitiveBlock::kDateGranularityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrimitiveBlock::PrimitiveBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmformat_2eproto::scc_info_PrimitiveBlock.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:OSMPBF.PrimitiveBlock)
}
PrimitiveBlock::PrimitiveBlock(const PrimitiveBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      primitivegroup_(from.primitivegroup_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stringtable()) {
    stringtable_ = new ::OSMPBF::StringTable(*from.stringtable_);
  } else {
    stringtable_ = NULL;
  }
  ::memcpy(&lat_offset_, &from.lat_offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&date_granularity_) -
    reinterpret_cast<char*>(&lat_offset_)) + sizeof(date_granularity_));
  // @@protoc_insertion_point(copy_constructor:OSMPBF.PrimitiveBlock)
}

void PrimitiveBlock::SharedCtor() {
  ::memset(&stringtable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lon_offset_) -
      reinterpret_cast<char*>(&stringtable_)) + sizeof(lon_offset_));
  granularity_ = 100;
  date_granularity_ = 1000;
}

PrimitiveBlock::~PrimitiveBlock() {
  // @@protoc_insertion_point(destructor:OSMPBF.PrimitiveBlock)
  SharedDtor();
}

void PrimitiveBlock::SharedDtor() {
  if (this != internal_default_instance()) delete stringtable_;
}

void PrimitiveBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrimitiveBlock::descriptor() {
  ::protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrimitiveBlock& PrimitiveBlock::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmformat_2eproto::scc_info_PrimitiveBlock.base);
  return *internal_default_instance();
}


void PrimitiveBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:OSMPBF.PrimitiveBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  primitivegroup_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(stringtable_ != NULL);
    stringtable_->Clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&lat_offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lon_offset_) -
        reinterpret_cast<char*>(&lat_offset_)) + sizeof(lon_offset_));
    granularity_ = 100;
    date_granularity_ = 1000;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PrimitiveBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OSMPBF.PrimitiveBlock)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .OSMPBF.StringTable stringtable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stringtable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_primitivegroup()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 granularity = 17 [default = 100];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_granularity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &granularity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 date_granularity = 18 [default = 1000];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_date_granularity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &date_granularity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 lat_offset = 19 [default = 0];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_lat_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lat_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 lon_offset = 20 [default = 0];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_lon_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lon_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OSMPBF.PrimitiveBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OSMPBF.PrimitiveBlock)
  return false;
#undef DO_
}

void PrimitiveBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OSMPBF.PrimitiveBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .OSMPBF.StringTable stringtable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_stringtable(), output);
  }

  // repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->primitivegroup_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->primitivegroup(static_cast<int>(i)),
      output);
  }

  // optional int32 granularity = 17 [default = 100];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->granularity(), output);
  }

  // optional int32 date_granularity = 18 [default = 1000];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->date_granularity(), output);
  }

  // optional int64 lat_offset = 19 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(19, this->lat_offset(), output);
  }

  // optional int64 lon_offset = 20 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->lon_offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OSMPBF.PrimitiveBlock)
}

::google::protobuf::uint8* PrimitiveBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OSMPBF.PrimitiveBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .OSMPBF.StringTable stringtable = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_stringtable(), deterministic, target);
  }

  // repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->primitivegroup_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->primitivegroup(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 granularity = 17 [default = 100];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->granularity(), target);
  }

  // optional int32 date_granularity = 18 [default = 1000];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->date_granularity(), target);
  }

  // optional int64 lat_offset = 19 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(19, this->lat_offset(), target);
  }

  // optional int64 lon_offset = 20 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(20, this->lon_offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OSMPBF.PrimitiveBlock)
  return target;
}

size_t PrimitiveBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OSMPBF.PrimitiveBlock)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .OSMPBF.StringTable stringtable = 1;
  if (has_stringtable()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *stringtable_);
  }
  // repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->primitivegroup_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->primitivegroup(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 30u) {
    // optional int64 lat_offset = 19 [default = 0];
    if (has_lat_offset()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lat_offset());
    }

    // optional int64 lon_offset = 20 [default = 0];
    if (has_lon_offset()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lon_offset());
    }

    // optional int32 granularity = 17 [default = 100];
    if (has_granularity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->granularity());
    }

    // optional int32 date_granularity = 18 [default = 1000];
    if (has_date_granularity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->date_granularity());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrimitiveBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OSMPBF.PrimitiveBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const PrimitiveBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrimitiveBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OSMPBF.PrimitiveBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OSMPBF.PrimitiveBlock)
    MergeFrom(*source);
  }
}

void PrimitiveBlock::MergeFrom(const PrimitiveBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OSMPBF.PrimitiveBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  primitivegroup_.MergeFrom(from.primitivegroup_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_stringtable()->::OSMPBF::StringTable::MergeFrom(from.stringtable());
    }
    if (cached_has_bits & 0x00000002u) {
      lat_offset_ = from.lat_offset_;
    }
    if (cached_has_bits & 0x00000004u) {
      lon_offset_ = from.lon_offset_;
    }
    if (cached_has_bits & 0x00000008u) {
      granularity_ = from.granularity_;
    }
    if (cached_has_bits & 0x00000010u) {
      date_granularity_ = from.date_granularity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrimitiveBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OSMPBF.PrimitiveBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrimitiveBlock::CopyFrom(const PrimitiveBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OSMPBF.PrimitiveBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrimitiveBlock::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->primitivegroup())) return false;
  return true;
}

void PrimitiveBlock::Swap(PrimitiveBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrimitiveBlock::InternalSwap(PrimitiveBlock* other) {
  using std::swap;
  CastToBase(&primitivegroup_)->InternalSwap(CastToBase(&other->primitivegroup_));
  swap(stringtable_, other->stringtable_);
  swap(lat_offset_, other->lat_offset_);
  swap(lon_offset_, other->lon_offset_);
  swap(granularity_, other->granularity_);
  swap(date_granularity_, other->date_granularity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrimitiveBlock::GetMetadata() const {
  protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PrimitiveGroup::InitAsDefaultInstance() {
  ::OSMPBF::_PrimitiveGroup_default_instance_._instance.get_mutable()->dense_ = const_cast< ::OSMPBF::DenseNodes*>(
      ::OSMPBF::DenseNodes::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrimitiveGroup::kNodesFieldNumber;
const int PrimitiveGroup::kDenseFieldNumber;
const int PrimitiveGroup::kWaysFieldNumber;
const int PrimitiveGroup::kRelationsFieldNumber;
const int PrimitiveGroup::kChangesetsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrimitiveGroup::PrimitiveGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmformat_2eproto::scc_info_PrimitiveGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:OSMPBF.PrimitiveGroup)
}
PrimitiveGroup::PrimitiveGroup(const PrimitiveGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      nodes_(from.nodes_),
      ways_(from.ways_),
      relations_(from.relations_),
      changesets_(from.changesets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dense()) {
    dense_ = new ::OSMPBF::DenseNodes(*from.dense_);
  } else {
    dense_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:OSMPBF.PrimitiveGroup)
}

void PrimitiveGroup::SharedCtor() {
  dense_ = NULL;
}

PrimitiveGroup::~PrimitiveGroup() {
  // @@protoc_insertion_point(destructor:OSMPBF.PrimitiveGroup)
  SharedDtor();
}

void PrimitiveGroup::SharedDtor() {
  if (this != internal_default_instance()) delete dense_;
}

void PrimitiveGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrimitiveGroup::descriptor() {
  ::protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrimitiveGroup& PrimitiveGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmformat_2eproto::scc_info_PrimitiveGroup.base);
  return *internal_default_instance();
}


void PrimitiveGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:OSMPBF.PrimitiveGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  ways_.Clear();
  relations_.Clear();
  changesets_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(dense_ != NULL);
    dense_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PrimitiveGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OSMPBF.PrimitiveGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .OSMPBF.Node nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .OSMPBF.DenseNodes dense = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dense()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .OSMPBF.Way ways = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ways()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .OSMPBF.Relation relations = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_relations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .OSMPBF.ChangeSet changesets = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_changesets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OSMPBF.PrimitiveGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OSMPBF.PrimitiveGroup)
  return false;
#undef DO_
}

void PrimitiveGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OSMPBF.PrimitiveGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OSMPBF.Node nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->nodes(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .OSMPBF.DenseNodes dense = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_dense(), output);
  }

  // repeated .OSMPBF.Way ways = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ways_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->ways(static_cast<int>(i)),
      output);
  }

  // repeated .OSMPBF.Relation relations = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->relations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->relations(static_cast<int>(i)),
      output);
  }

  // repeated .OSMPBF.ChangeSet changesets = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->changesets_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->changesets(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OSMPBF.PrimitiveGroup)
}

::google::protobuf::uint8* PrimitiveGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OSMPBF.PrimitiveGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OSMPBF.Node nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .OSMPBF.DenseNodes dense = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_dense(), deterministic, target);
  }

  // repeated .OSMPBF.Way ways = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ways_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->ways(static_cast<int>(i)), deterministic, target);
  }

  // repeated .OSMPBF.Relation relations = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->relations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->relations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .OSMPBF.ChangeSet changesets = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->changesets_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->changesets(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OSMPBF.PrimitiveGroup)
  return target;
}

size_t PrimitiveGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OSMPBF.PrimitiveGroup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .OSMPBF.Node nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  // repeated .OSMPBF.Way ways = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->ways_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ways(static_cast<int>(i)));
    }
  }

  // repeated .OSMPBF.Relation relations = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->relations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->relations(static_cast<int>(i)));
    }
  }

  // repeated .OSMPBF.ChangeSet changesets = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->changesets_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->changesets(static_cast<int>(i)));
    }
  }

  // optional .OSMPBF.DenseNodes dense = 2;
  if (has_dense()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dense_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrimitiveGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OSMPBF.PrimitiveGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const PrimitiveGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrimitiveGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OSMPBF.PrimitiveGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OSMPBF.PrimitiveGroup)
    MergeFrom(*source);
  }
}

void PrimitiveGroup::MergeFrom(const PrimitiveGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OSMPBF.PrimitiveGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  ways_.MergeFrom(from.ways_);
  relations_.MergeFrom(from.relations_);
  changesets_.MergeFrom(from.changesets_);
  if (from.has_dense()) {
    mutable_dense()->::OSMPBF::DenseNodes::MergeFrom(from.dense());
  }
}

void PrimitiveGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OSMPBF.PrimitiveGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrimitiveGroup::CopyFrom(const PrimitiveGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OSMPBF.PrimitiveGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrimitiveGroup::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->nodes())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ways())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->relations())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->changesets())) return false;
  return true;
}

void PrimitiveGroup::Swap(PrimitiveGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrimitiveGroup::InternalSwap(PrimitiveGroup* other) {
  using std::swap;
  CastToBase(&nodes_)->InternalSwap(CastToBase(&other->nodes_));
  CastToBase(&ways_)->InternalSwap(CastToBase(&other->ways_));
  CastToBase(&relations_)->InternalSwap(CastToBase(&other->relations_));
  CastToBase(&changesets_)->InternalSwap(CastToBase(&other->changesets_));
  swap(dense_, other->dense_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrimitiveGroup::GetMetadata() const {
  protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StringTable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringTable::kSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringTable::StringTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmformat_2eproto::scc_info_StringTable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:OSMPBF.StringTable)
}
StringTable::StringTable(const StringTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      s_(from.s_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:OSMPBF.StringTable)
}

void StringTable::SharedCtor() {
}

StringTable::~StringTable() {
  // @@protoc_insertion_point(destructor:OSMPBF.StringTable)
  SharedDtor();
}

void StringTable::SharedDtor() {
}

void StringTable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StringTable::descriptor() {
  ::protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringTable& StringTable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmformat_2eproto::scc_info_StringTable.base);
  return *internal_default_instance();
}


void StringTable::Clear() {
// @@protoc_insertion_point(message_clear_start:OSMPBF.StringTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  s_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StringTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OSMPBF.StringTable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OSMPBF.StringTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OSMPBF.StringTable)
  return false;
#undef DO_
}

void StringTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OSMPBF.StringTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes s = 1;
  for (int i = 0, n = this->s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OSMPBF.StringTable)
}

::google::protobuf::uint8* StringTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OSMPBF.StringTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes s = 1;
  for (int i = 0, n = this->s_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->s(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OSMPBF.StringTable)
  return target;
}

size_t StringTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OSMPBF.StringTable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bytes s = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->s_size());
  for (int i = 0, n = this->s_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->s(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OSMPBF.StringTable)
  GOOGLE_DCHECK_NE(&from, this);
  const StringTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OSMPBF.StringTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OSMPBF.StringTable)
    MergeFrom(*source);
  }
}

void StringTable::MergeFrom(const StringTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OSMPBF.StringTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  s_.MergeFrom(from.s_);
}

void StringTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OSMPBF.StringTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringTable::CopyFrom(const StringTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OSMPBF.StringTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringTable::IsInitialized() const {
  return true;
}

void StringTable::Swap(StringTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringTable::InternalSwap(StringTable* other) {
  using std::swap;
  s_.InternalSwap(CastToBase(&other->s_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StringTable::GetMetadata() const {
  protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Info::kVersionFieldNumber;
const int Info::kTimestampFieldNumber;
const int Info::kChangesetFieldNumber;
const int Info::kUidFieldNumber;
const int Info::kUserSidFieldNumber;
const int Info::kVisibleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Info::Info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmformat_2eproto::scc_info_Info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:OSMPBF.Info)
}
Info::Info(const Info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:OSMPBF.Info)
}

void Info::SharedCtor() {
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visible_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(visible_));
  version_ = -1;
}

Info::~Info() {
  // @@protoc_insertion_point(destructor:OSMPBF.Info)
  SharedDtor();
}

void Info::SharedDtor() {
}

void Info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Info::descriptor() {
  ::protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Info& Info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmformat_2eproto::scc_info_Info.base);
  return *internal_default_instance();
}


void Info::Clear() {
// @@protoc_insertion_point(message_clear_start:OSMPBF.Info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&visible_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(visible_));
    version_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OSMPBF.Info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 version = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 changeset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_changeset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &changeset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 uid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 user_sid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_user_sid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_sid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool visible = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_visible();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OSMPBF.Info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OSMPBF.Info)
  return false;
#undef DO_
}

void Info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OSMPBF.Info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 version = 1 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // optional int64 timestamp = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // optional int64 changeset = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->changeset(), output);
  }

  // optional int32 uid = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->uid(), output);
  }

  // optional uint32 user_sid = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->user_sid(), output);
  }

  // optional bool visible = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->visible(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OSMPBF.Info)
}

::google::protobuf::uint8* Info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OSMPBF.Info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 version = 1 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // optional int64 timestamp = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // optional int64 changeset = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->changeset(), target);
  }

  // optional int32 uid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->uid(), target);
  }

  // optional uint32 user_sid = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->user_sid(), target);
  }

  // optional bool visible = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->visible(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OSMPBF.Info)
  return target;
}

size_t Info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OSMPBF.Info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional int64 timestamp = 2;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timestamp());
    }

    // optional int64 changeset = 3;
    if (has_changeset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->changeset());
    }

    // optional int32 uid = 4;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->uid());
    }

    // optional uint32 user_sid = 5;
    if (has_user_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_sid());
    }

    // optional bool visible = 6;
    if (has_visible()) {
      total_size += 1 + 1;
    }

    // optional int32 version = 1 [default = -1];
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OSMPBF.Info)
  GOOGLE_DCHECK_NE(&from, this);
  const Info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OSMPBF.Info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OSMPBF.Info)
    MergeFrom(*source);
  }
}

void Info::MergeFrom(const Info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OSMPBF.Info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000002u) {
      changeset_ = from.changeset_;
    }
    if (cached_has_bits & 0x00000004u) {
      uid_ = from.uid_;
    }
    if (cached_has_bits & 0x00000008u) {
      user_sid_ = from.user_sid_;
    }
    if (cached_has_bits & 0x00000010u) {
      visible_ = from.visible_;
    }
    if (cached_has_bits & 0x00000020u) {
      version_ = from.version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OSMPBF.Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Info::CopyFrom(const Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OSMPBF.Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Info::IsInitialized() const {
  return true;
}

void Info::Swap(Info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Info::InternalSwap(Info* other) {
  using std::swap;
  swap(timestamp_, other->timestamp_);
  swap(changeset_, other->changeset_);
  swap(uid_, other->uid_);
  swap(user_sid_, other->user_sid_);
  swap(visible_, other->visible_);
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Info::GetMetadata() const {
  protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DenseInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DenseInfo::kVersionFieldNumber;
const int DenseInfo::kTimestampFieldNumber;
const int DenseInfo::kChangesetFieldNumber;
const int DenseInfo::kUidFieldNumber;
const int DenseInfo::kUserSidFieldNumber;
const int DenseInfo::kVisibleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DenseInfo::DenseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmformat_2eproto::scc_info_DenseInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:OSMPBF.DenseInfo)
}
DenseInfo::DenseInfo(const DenseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      version_(from.version_),
      timestamp_(from.timestamp_),
      changeset_(from.changeset_),
      uid_(from.uid_),
      user_sid_(from.user_sid_),
      visible_(from.visible_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:OSMPBF.DenseInfo)
}

void DenseInfo::SharedCtor() {
}

DenseInfo::~DenseInfo() {
  // @@protoc_insertion_point(destructor:OSMPBF.DenseInfo)
  SharedDtor();
}

void DenseInfo::SharedDtor() {
}

void DenseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DenseInfo::descriptor() {
  ::protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DenseInfo& DenseInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmformat_2eproto::scc_info_DenseInfo.base);
  return *internal_default_instance();
}


void DenseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:OSMPBF.DenseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.Clear();
  timestamp_.Clear();
  changeset_.Clear();
  uid_.Clear();
  user_sid_.Clear();
  visible_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DenseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OSMPBF.DenseInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 version = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_version())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_version())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 timestamp = 2 [packed = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_timestamp())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18u, input, this->mutable_timestamp())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 changeset = 3 [packed = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_changeset())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 26u, input, this->mutable_changeset())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 uid = 4 [packed = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_uid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 34u, input, this->mutable_uid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 user_sid = 5 [packed = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_user_sid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 42u, input, this->mutable_user_sid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool visible = 6 [packed = true];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_visible())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 50u, input, this->mutable_visible())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OSMPBF.DenseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OSMPBF.DenseInfo)
  return false;
#undef DO_
}

void DenseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OSMPBF.DenseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 version = 1 [packed = true];
  if (this->version_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _version_cached_byte_size_));
  }
  for (int i = 0, n = this->version_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->version(i), output);
  }

  // repeated sint64 timestamp = 2 [packed = true];
  if (this->timestamp_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _timestamp_cached_byte_size_));
  }
  for (int i = 0, n = this->timestamp_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->timestamp(i), output);
  }

  // repeated sint64 changeset = 3 [packed = true];
  if (this->changeset_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _changeset_cached_byte_size_));
  }
  for (int i = 0, n = this->changeset_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->changeset(i), output);
  }

  // repeated sint32 uid = 4 [packed = true];
  if (this->uid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _uid_cached_byte_size_));
  }
  for (int i = 0, n = this->uid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->uid(i), output);
  }

  // repeated sint32 user_sid = 5 [packed = true];
  if (this->user_sid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _user_sid_cached_byte_size_));
  }
  for (int i = 0, n = this->user_sid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->user_sid(i), output);
  }

  // repeated bool visible = 6 [packed = true];
  if (this->visible_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _visible_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->visible().data(), this->visible_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OSMPBF.DenseInfo)
}

::google::protobuf::uint8* DenseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OSMPBF.DenseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 version = 1 [packed = true];
  if (this->version_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _version_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->version_, target);
  }

  // repeated sint64 timestamp = 2 [packed = true];
  if (this->timestamp_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _timestamp_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->timestamp_, target);
  }

  // repeated sint64 changeset = 3 [packed = true];
  if (this->changeset_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _changeset_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->changeset_, target);
  }

  // repeated sint32 uid = 4 [packed = true];
  if (this->uid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _uid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->uid_, target);
  }

  // repeated sint32 user_sid = 5 [packed = true];
  if (this->user_sid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _user_sid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->user_sid_, target);
  }

  // repeated bool visible = 6 [packed = true];
  if (this->visible_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _visible_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->visible_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OSMPBF.DenseInfo)
  return target;
}

size_t DenseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OSMPBF.DenseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 version = 1 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->version_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _version_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 timestamp = 2 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->timestamp_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _timestamp_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 changeset = 3 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->changeset_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _changeset_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 uid = 4 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->uid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 user_sid = 5 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->user_sid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _user_sid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool visible = 6 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->visible_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _visible_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DenseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OSMPBF.DenseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DenseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DenseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OSMPBF.DenseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OSMPBF.DenseInfo)
    MergeFrom(*source);
  }
}

void DenseInfo::MergeFrom(const DenseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OSMPBF.DenseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  version_.MergeFrom(from.version_);
  timestamp_.MergeFrom(from.timestamp_);
  changeset_.MergeFrom(from.changeset_);
  uid_.MergeFrom(from.uid_);
  user_sid_.MergeFrom(from.user_sid_);
  visible_.MergeFrom(from.visible_);
}

void DenseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OSMPBF.DenseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DenseInfo::CopyFrom(const DenseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OSMPBF.DenseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DenseInfo::IsInitialized() const {
  return true;
}

void DenseInfo::Swap(DenseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DenseInfo::InternalSwap(DenseInfo* other) {
  using std::swap;
  version_.InternalSwap(&other->version_);
  timestamp_.InternalSwap(&other->timestamp_);
  changeset_.InternalSwap(&other->changeset_);
  uid_.InternalSwap(&other->uid_);
  user_sid_.InternalSwap(&other->user_sid_);
  visible_.InternalSwap(&other->visible_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DenseInfo::GetMetadata() const {
  protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeSet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeSet::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeSet::ChangeSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmformat_2eproto::scc_info_ChangeSet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:OSMPBF.ChangeSet)
}
ChangeSet::ChangeSet(const ChangeSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:OSMPBF.ChangeSet)
}

void ChangeSet::SharedCtor() {
  id_ = GOOGLE_LONGLONG(0);
}

ChangeSet::~ChangeSet() {
  // @@protoc_insertion_point(destructor:OSMPBF.ChangeSet)
  SharedDtor();
}

void ChangeSet::SharedDtor() {
}

void ChangeSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChangeSet::descriptor() {
  ::protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeSet& ChangeSet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmformat_2eproto::scc_info_ChangeSet.base);
  return *internal_default_instance();
}


void ChangeSet::Clear() {
// @@protoc_insertion_point(message_clear_start:OSMPBF.ChangeSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChangeSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OSMPBF.ChangeSet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OSMPBF.ChangeSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OSMPBF.ChangeSet)
  return false;
#undef DO_
}

void ChangeSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OSMPBF.ChangeSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OSMPBF.ChangeSet)
}

::google::protobuf::uint8* ChangeSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OSMPBF.ChangeSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OSMPBF.ChangeSet)
  return target;
}

size_t ChangeSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OSMPBF.ChangeSet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OSMPBF.ChangeSet)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OSMPBF.ChangeSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OSMPBF.ChangeSet)
    MergeFrom(*source);
  }
}

void ChangeSet::MergeFrom(const ChangeSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OSMPBF.ChangeSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void ChangeSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OSMPBF.ChangeSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeSet::CopyFrom(const ChangeSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OSMPBF.ChangeSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeSet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ChangeSet::Swap(ChangeSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeSet::InternalSwap(ChangeSet* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChangeSet::GetMetadata() const {
  protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Node::InitAsDefaultInstance() {
  ::OSMPBF::_Node_default_instance_._instance.get_mutable()->info_ = const_cast< ::OSMPBF::Info*>(
      ::OSMPBF::Info::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Node::kIdFieldNumber;
const int Node::kKeysFieldNumber;
const int Node::kValsFieldNumber;
const int Node::kInfoFieldNumber;
const int Node::kLatFieldNumber;
const int Node::kLonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Node::Node()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmformat_2eproto::scc_info_Node.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:OSMPBF.Node)
}
Node::Node(const Node& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      keys_(from.keys_),
      vals_(from.vals_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::OSMPBF::Info(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&lon_) -
    reinterpret_cast<char*>(&id_)) + sizeof(lon_));
  // @@protoc_insertion_point(copy_constructor:OSMPBF.Node)
}

void Node::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lon_) -
      reinterpret_cast<char*>(&info_)) + sizeof(lon_));
}

Node::~Node() {
  // @@protoc_insertion_point(destructor:OSMPBF.Node)
  SharedDtor();
}

void Node::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void Node::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Node::descriptor() {
  ::protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Node& Node::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmformat_2eproto::scc_info_Node.base);
  return *internal_default_instance();
}


void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:OSMPBF.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  vals_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(info_ != NULL);
    info_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lon_) -
        reinterpret_cast<char*>(&id_)) + sizeof(lon_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OSMPBF.Node)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 keys = 2 [packed = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_keys())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_keys())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 vals = 3 [packed = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_vals())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_vals())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .OSMPBF.Info info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint64 lat = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_lat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint64 lon = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_lon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &lon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OSMPBF.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OSMPBF.Node)
  return false;
#undef DO_
}

void Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OSMPBF.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->id(), output);
  }

  // repeated uint32 keys = 2 [packed = true];
  if (this->keys_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _keys_cached_byte_size_));
  }
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->keys(i), output);
  }

  // repeated uint32 vals = 3 [packed = true];
  if (this->vals_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _vals_cached_byte_size_));
  }
  for (int i = 0, n = this->vals_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->vals(i), output);
  }

  // optional .OSMPBF.Info info = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_info(), output);
  }

  // required sint64 lat = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(8, this->lat(), output);
  }

  // required sint64 lon = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(9, this->lon(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OSMPBF.Node)
}

::google::protobuf::uint8* Node::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OSMPBF.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->id(), target);
  }

  // repeated uint32 keys = 2 [packed = true];
  if (this->keys_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _keys_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->keys_, target);
  }

  // repeated uint32 vals = 3 [packed = true];
  if (this->vals_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _vals_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->vals_, target);
  }

  // optional .OSMPBF.Info info = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_info(), deterministic, target);
  }

  // required sint64 lat = 8;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(8, this->lat(), target);
  }

  // required sint64 lon = 9;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(9, this->lon(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OSMPBF.Node)
  return target;
}

size_t Node::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:OSMPBF.Node)
  size_t total_size = 0;

  if (has_id()) {
    // required sint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->id());
  }

  if (has_lat()) {
    // required sint64 lat = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->lat());
  }

  if (has_lon()) {
    // required sint64 lon = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->lon());
  }

  return total_size;
}
size_t Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OSMPBF.Node)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required sint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->id());

    // required sint64 lat = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->lat());

    // required sint64 lon = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->lon());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 keys = 2 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->keys_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _keys_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 vals = 3 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->vals_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _vals_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // optional .OSMPBF.Info info = 4;
  if (has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OSMPBF.Node)
  GOOGLE_DCHECK_NE(&from, this);
  const Node* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Node>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OSMPBF.Node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OSMPBF.Node)
    MergeFrom(*source);
  }
}

void Node::MergeFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OSMPBF.Node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  vals_.MergeFrom(from.vals_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_info()->::OSMPBF::Info::MergeFrom(from.info());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      lat_ = from.lat_;
    }
    if (cached_has_bits & 0x00000008u) {
      lon_ = from.lon_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OSMPBF.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OSMPBF.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Node::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  return true;
}

void Node::Swap(Node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Node::InternalSwap(Node* other) {
  using std::swap;
  keys_.InternalSwap(&other->keys_);
  vals_.InternalSwap(&other->vals_);
  swap(info_, other->info_);
  swap(id_, other->id_);
  swap(lat_, other->lat_);
  swap(lon_, other->lon_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Node::GetMetadata() const {
  protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DenseNodes::InitAsDefaultInstance() {
  ::OSMPBF::_DenseNodes_default_instance_._instance.get_mutable()->denseinfo_ = const_cast< ::OSMPBF::DenseInfo*>(
      ::OSMPBF::DenseInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DenseNodes::kIdFieldNumber;
const int DenseNodes::kDenseinfoFieldNumber;
const int DenseNodes::kLatFieldNumber;
const int DenseNodes::kLonFieldNumber;
const int DenseNodes::kKeysValsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DenseNodes::DenseNodes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmformat_2eproto::scc_info_DenseNodes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:OSMPBF.DenseNodes)
}
DenseNodes::DenseNodes(const DenseNodes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      id_(from.id_),
      lat_(from.lat_),
      lon_(from.lon_),
      keys_vals_(from.keys_vals_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_denseinfo()) {
    denseinfo_ = new ::OSMPBF::DenseInfo(*from.denseinfo_);
  } else {
    denseinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:OSMPBF.DenseNodes)
}

void DenseNodes::SharedCtor() {
  denseinfo_ = NULL;
}

DenseNodes::~DenseNodes() {
  // @@protoc_insertion_point(destructor:OSMPBF.DenseNodes)
  SharedDtor();
}

void DenseNodes::SharedDtor() {
  if (this != internal_default_instance()) delete denseinfo_;
}

void DenseNodes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DenseNodes::descriptor() {
  ::protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DenseNodes& DenseNodes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmformat_2eproto::scc_info_DenseNodes.base);
  return *internal_default_instance();
}


void DenseNodes::Clear() {
// @@protoc_insertion_point(message_clear_start:OSMPBF.DenseNodes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.Clear();
  lat_.Clear();
  lon_.Clear();
  keys_vals_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(denseinfo_ != NULL);
    denseinfo_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DenseNodes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OSMPBF.DenseNodes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 id = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .OSMPBF.DenseInfo denseinfo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_denseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 lat = 8 [packed = true];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_lat())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 66u, input, this->mutable_lat())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 lon = 9 [packed = true];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_lon())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 74u, input, this->mutable_lon())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 keys_vals = 10 [packed = true];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_keys_vals())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 82u, input, this->mutable_keys_vals())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OSMPBF.DenseNodes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OSMPBF.DenseNodes)
  return false;
#undef DO_
}

void DenseNodes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OSMPBF.DenseNodes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 id = 1 [packed = true];
  if (this->id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _id_cached_byte_size_));
  }
  for (int i = 0, n = this->id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->id(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .OSMPBF.DenseInfo denseinfo = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_denseinfo(), output);
  }

  // repeated sint64 lat = 8 [packed = true];
  if (this->lat_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _lat_cached_byte_size_));
  }
  for (int i = 0, n = this->lat_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->lat(i), output);
  }

  // repeated sint64 lon = 9 [packed = true];
  if (this->lon_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _lon_cached_byte_size_));
  }
  for (int i = 0, n = this->lon_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->lon(i), output);
  }

  // repeated int32 keys_vals = 10 [packed = true];
  if (this->keys_vals_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _keys_vals_cached_byte_size_));
  }
  for (int i = 0, n = this->keys_vals_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->keys_vals(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OSMPBF.DenseNodes)
}

::google::protobuf::uint8* DenseNodes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OSMPBF.DenseNodes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 id = 1 [packed = true];
  if (this->id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _id_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->id_, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .OSMPBF.DenseInfo denseinfo = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_denseinfo(), deterministic, target);
  }

  // repeated sint64 lat = 8 [packed = true];
  if (this->lat_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _lat_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->lat_, target);
  }

  // repeated sint64 lon = 9 [packed = true];
  if (this->lon_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _lon_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->lon_, target);
  }

  // repeated int32 keys_vals = 10 [packed = true];
  if (this->keys_vals_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _keys_vals_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->keys_vals_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OSMPBF.DenseNodes)
  return target;
}

size_t DenseNodes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OSMPBF.DenseNodes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated sint64 id = 1 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->id_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _id_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 lat = 8 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->lat_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _lat_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 lon = 9 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->lon_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _lon_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 keys_vals = 10 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->keys_vals_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _keys_vals_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // optional .OSMPBF.DenseInfo denseinfo = 5;
  if (has_denseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *denseinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DenseNodes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OSMPBF.DenseNodes)
  GOOGLE_DCHECK_NE(&from, this);
  const DenseNodes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DenseNodes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OSMPBF.DenseNodes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OSMPBF.DenseNodes)
    MergeFrom(*source);
  }
}

void DenseNodes::MergeFrom(const DenseNodes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OSMPBF.DenseNodes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  id_.MergeFrom(from.id_);
  lat_.MergeFrom(from.lat_);
  lon_.MergeFrom(from.lon_);
  keys_vals_.MergeFrom(from.keys_vals_);
  if (from.has_denseinfo()) {
    mutable_denseinfo()->::OSMPBF::DenseInfo::MergeFrom(from.denseinfo());
  }
}

void DenseNodes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OSMPBF.DenseNodes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DenseNodes::CopyFrom(const DenseNodes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OSMPBF.DenseNodes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DenseNodes::IsInitialized() const {
  return true;
}

void DenseNodes::Swap(DenseNodes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DenseNodes::InternalSwap(DenseNodes* other) {
  using std::swap;
  id_.InternalSwap(&other->id_);
  lat_.InternalSwap(&other->lat_);
  lon_.InternalSwap(&other->lon_);
  keys_vals_.InternalSwap(&other->keys_vals_);
  swap(denseinfo_, other->denseinfo_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DenseNodes::GetMetadata() const {
  protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Way::InitAsDefaultInstance() {
  ::OSMPBF::_Way_default_instance_._instance.get_mutable()->info_ = const_cast< ::OSMPBF::Info*>(
      ::OSMPBF::Info::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Way::kIdFieldNumber;
const int Way::kKeysFieldNumber;
const int Way::kValsFieldNumber;
const int Way::kInfoFieldNumber;
const int Way::kRefsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Way::Way()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmformat_2eproto::scc_info_Way.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:OSMPBF.Way)
}
Way::Way(const Way& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      keys_(from.keys_),
      vals_(from.vals_),
      refs_(from.refs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::OSMPBF::Info(*from.info_);
  } else {
    info_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:OSMPBF.Way)
}

void Way::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&info_)) + sizeof(id_));
}

Way::~Way() {
  // @@protoc_insertion_point(destructor:OSMPBF.Way)
  SharedDtor();
}

void Way::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void Way::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Way::descriptor() {
  ::protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Way& Way::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmformat_2eproto::scc_info_Way.base);
  return *internal_default_instance();
}


void Way::Clear() {
// @@protoc_insertion_point(message_clear_start:OSMPBF.Way)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  vals_.Clear();
  refs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(info_ != NULL);
    info_->Clear();
  }
  id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Way::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OSMPBF.Way)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 keys = 2 [packed = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_keys())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_keys())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 vals = 3 [packed = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_vals())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_vals())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .OSMPBF.Info info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 refs = 8 [packed = true];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_refs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 66u, input, this->mutable_refs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OSMPBF.Way)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OSMPBF.Way)
  return false;
#undef DO_
}

void Way::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OSMPBF.Way)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // repeated uint32 keys = 2 [packed = true];
  if (this->keys_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _keys_cached_byte_size_));
  }
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->keys(i), output);
  }

  // repeated uint32 vals = 3 [packed = true];
  if (this->vals_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _vals_cached_byte_size_));
  }
  for (int i = 0, n = this->vals_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->vals(i), output);
  }

  // optional .OSMPBF.Info info = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_info(), output);
  }

  // repeated sint64 refs = 8 [packed = true];
  if (this->refs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _refs_cached_byte_size_));
  }
  for (int i = 0, n = this->refs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->refs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OSMPBF.Way)
}

::google::protobuf::uint8* Way::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OSMPBF.Way)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // repeated uint32 keys = 2 [packed = true];
  if (this->keys_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _keys_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->keys_, target);
  }

  // repeated uint32 vals = 3 [packed = true];
  if (this->vals_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _vals_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->vals_, target);
  }

  // optional .OSMPBF.Info info = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_info(), deterministic, target);
  }

  // repeated sint64 refs = 8 [packed = true];
  if (this->refs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _refs_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->refs_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OSMPBF.Way)
  return target;
}

size_t Way::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OSMPBF.Way)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }
  // repeated uint32 keys = 2 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->keys_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _keys_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 vals = 3 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->vals_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _vals_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 refs = 8 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->refs_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _refs_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // optional .OSMPBF.Info info = 4;
  if (has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Way::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OSMPBF.Way)
  GOOGLE_DCHECK_NE(&from, this);
  const Way* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Way>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OSMPBF.Way)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OSMPBF.Way)
    MergeFrom(*source);
  }
}

void Way::MergeFrom(const Way& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OSMPBF.Way)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  vals_.MergeFrom(from.vals_);
  refs_.MergeFrom(from.refs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_info()->::OSMPBF::Info::MergeFrom(from.info());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Way::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OSMPBF.Way)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Way::CopyFrom(const Way& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OSMPBF.Way)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Way::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Way::Swap(Way* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Way::InternalSwap(Way* other) {
  using std::swap;
  keys_.InternalSwap(&other->keys_);
  vals_.InternalSwap(&other->vals_);
  refs_.InternalSwap(&other->refs_);
  swap(info_, other->info_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Way::GetMetadata() const {
  protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Relation::InitAsDefaultInstance() {
  ::OSMPBF::_Relation_default_instance_._instance.get_mutable()->info_ = const_cast< ::OSMPBF::Info*>(
      ::OSMPBF::Info::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Relation::kIdFieldNumber;
const int Relation::kKeysFieldNumber;
const int Relation::kValsFieldNumber;
const int Relation::kInfoFieldNumber;
const int Relation::kRolesSidFieldNumber;
const int Relation::kMemidsFieldNumber;
const int Relation::kTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Relation::Relation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmformat_2eproto::scc_info_Relation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:OSMPBF.Relation)
}
Relation::Relation(const Relation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      keys_(from.keys_),
      vals_(from.vals_),
      roles_sid_(from.roles_sid_),
      memids_(from.memids_),
      types_(from.types_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::OSMPBF::Info(*from.info_);
  } else {
    info_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:OSMPBF.Relation)
}

void Relation::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&info_)) + sizeof(id_));
}

Relation::~Relation() {
  // @@protoc_insertion_point(destructor:OSMPBF.Relation)
  SharedDtor();
}

void Relation::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void Relation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Relation::descriptor() {
  ::protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Relation& Relation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmformat_2eproto::scc_info_Relation.base);
  return *internal_default_instance();
}


void Relation::Clear() {
// @@protoc_insertion_point(message_clear_start:OSMPBF.Relation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  vals_.Clear();
  roles_sid_.Clear();
  memids_.Clear();
  types_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(info_ != NULL);
    info_->Clear();
  }
  id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Relation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OSMPBF.Relation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 keys = 2 [packed = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_keys())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_keys())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 vals = 3 [packed = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_vals())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_vals())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .OSMPBF.Info info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 roles_sid = 8 [packed = true];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_roles_sid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_roles_sid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 memids = 9 [packed = true];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_memids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 74u, input, this->mutable_memids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            if (::OSMPBF::Relation_MemberType_IsValid(value)) {
              add_types(static_cast< ::OSMPBF::Relation_MemberType >(value));
            } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast< ::google::protobuf::uint64>(value));
            }
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OSMPBF::Relation_MemberType_IsValid(value)) {
            add_types(static_cast< ::OSMPBF::Relation_MemberType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OSMPBF.Relation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OSMPBF.Relation)
  return false;
#undef DO_
}

void Relation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OSMPBF.Relation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // repeated uint32 keys = 2 [packed = true];
  if (this->keys_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _keys_cached_byte_size_));
  }
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->keys(i), output);
  }

  // repeated uint32 vals = 3 [packed = true];
  if (this->vals_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _vals_cached_byte_size_));
  }
  for (int i = 0, n = this->vals_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->vals(i), output);
  }

  // optional .OSMPBF.Info info = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_info(), output);
  }

  // repeated int32 roles_sid = 8 [packed = true];
  if (this->roles_sid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _roles_sid_cached_byte_size_));
  }
  for (int i = 0, n = this->roles_sid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->roles_sid(i), output);
  }

  // repeated sint64 memids = 9 [packed = true];
  if (this->memids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _memids_cached_byte_size_));
  }
  for (int i = 0, n = this->memids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->memids(i), output);
  }

  // repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];
  if (this->types_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_types_cached_byte_size_));
  }
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->types(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OSMPBF.Relation)
}

::google::protobuf::uint8* Relation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OSMPBF.Relation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // repeated uint32 keys = 2 [packed = true];
  if (this->keys_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _keys_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->keys_, target);
  }

  // repeated uint32 vals = 3 [packed = true];
  if (this->vals_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _vals_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->vals_, target);
  }

  // optional .OSMPBF.Info info = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_info(), deterministic, target);
  }

  // repeated int32 roles_sid = 8 [packed = true];
  if (this->roles_sid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _roles_sid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->roles_sid_, target);
  }

  // repeated sint64 memids = 9 [packed = true];
  if (this->memids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _memids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->memids_, target);
  }

  // repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];
  if (this->types_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _types_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->types_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OSMPBF.Relation)
  return target;
}

size_t Relation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OSMPBF.Relation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }
  // repeated uint32 keys = 2 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->keys_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _keys_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 vals = 3 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->vals_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _vals_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 roles_sid = 8 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->roles_sid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _roles_sid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 memids = 9 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->memids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _memids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->types_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->types(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _types_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // optional .OSMPBF.Info info = 4;
  if (has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Relation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OSMPBF.Relation)
  GOOGLE_DCHECK_NE(&from, this);
  const Relation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Relation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OSMPBF.Relation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OSMPBF.Relation)
    MergeFrom(*source);
  }
}

void Relation::MergeFrom(const Relation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OSMPBF.Relation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  vals_.MergeFrom(from.vals_);
  roles_sid_.MergeFrom(from.roles_sid_);
  memids_.MergeFrom(from.memids_);
  types_.MergeFrom(from.types_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_info()->::OSMPBF::Info::MergeFrom(from.info());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Relation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OSMPBF.Relation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Relation::CopyFrom(const Relation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OSMPBF.Relation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Relation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Relation::Swap(Relation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Relation::InternalSwap(Relation* other) {
  using std::swap;
  keys_.InternalSwap(&other->keys_);
  vals_.InternalSwap(&other->vals_);
  roles_sid_.InternalSwap(&other->roles_sid_);
  memids_.InternalSwap(&other->memids_);
  types_.InternalSwap(&other->types_);
  swap(info_, other->info_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Relation::GetMetadata() const {
  protobuf_osmformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmformat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace OSMPBF
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::OSMPBF::HeaderBlock* Arena::CreateMaybeMessage< ::OSMPBF::HeaderBlock >(Arena* arena) {
  return Arena::CreateInternal< ::OSMPBF::HeaderBlock >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::OSMPBF::HeaderBBox* Arena::CreateMaybeMessage< ::OSMPBF::HeaderBBox >(Arena* arena) {
  return Arena::CreateInternal< ::OSMPBF::HeaderBBox >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::OSMPBF::PrimitiveBlock* Arena::CreateMaybeMessage< ::OSMPBF::PrimitiveBlock >(Arena* arena) {
  return Arena::CreateInternal< ::OSMPBF::PrimitiveBlock >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::OSMPBF::PrimitiveGroup* Arena::CreateMaybeMessage< ::OSMPBF::PrimitiveGroup >(Arena* arena) {
  return Arena::CreateInternal< ::OSMPBF::PrimitiveGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::OSMPBF::StringTable* Arena::CreateMaybeMessage< ::OSMPBF::StringTable >(Arena* arena) {
  return Arena::CreateInternal< ::OSMPBF::StringTable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::OSMPBF::Info* Arena::CreateMaybeMessage< ::OSMPBF::Info >(Arena* arena) {
  return Arena::CreateInternal< ::OSMPBF::Info >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::OSMPBF::DenseInfo* Arena::CreateMaybeMessage< ::OSMPBF::DenseInfo >(Arena* arena) {
  return Arena::CreateInternal< ::OSMPBF::DenseInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::OSMPBF::ChangeSet* Arena::CreateMaybeMessage< ::OSMPBF::ChangeSet >(Arena* arena) {
  return Arena::CreateInternal< ::OSMPBF::ChangeSet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::OSMPBF::Node* Arena::CreateMaybeMessage< ::OSMPBF::Node >(Arena* arena) {
  return Arena::CreateInternal< ::OSMPBF::Node >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::OSMPBF::DenseNodes* Arena::CreateMaybeMessage< ::OSMPBF::DenseNodes >(Arena* arena) {
  return Arena::CreateInternal< ::OSMPBF::DenseNodes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::OSMPBF::Way* Arena::CreateMaybeMessage< ::OSMPBF::Way >(Arena* arena) {
  return Arena::CreateInternal< ::OSMPBF::Way >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::OSMPBF::Relation* Arena::CreateMaybeMessage< ::OSMPBF::Relation >(Arena* arena) {
  return Arena::CreateInternal< ::OSMPBF::Relation >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
